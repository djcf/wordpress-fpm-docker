---
- name: Facts about this container 1
  set_fact:
    state: started
  when: container_always_active

- name: Facts about this container 2
  set_fact:
    state: present
  when: not container_always_active

- name: Project directory should exist
  file:
    path: "/var/www/{{ domain }}/conf"
    state: directory
    recurse: yes

# Shell: if [ -e /var/www/$domain/.env ]
- name: ENV file should exist
  stat: path="/var/www/{{ domain }}/.env"
  register: environment_exists
  ignore_errors: yes

- name: Generate random database password if ENV does not exist
  local_action: shell tr -d -c "a-zA-Z0-9" < /dev/urandom | head -c 20
  register: generated_password
  when: not environment_exists

- name: Store generated password if ENV does not exist
  set_fact:
    db_password: generated_password.stdout
  when: not environment_exists

- name: Read password from environment if it exists
  shell: "source /var/www/{{ domain }}/.env; echo $DB_PASSWORD"
  register: read_password
  when: environment_exists
  args:
    executable: /bin/bash

- name: Store read password
  set_fact:
    db_password: read_password.stdout
  when: environment_exists

# Shell: scp env $host:/var/www/$domain/.env
- name: Copy env vars for container to host
  template:
    src: env.j2
    dest: "/var/www/{{ domain }}/.env"
    owner: root
    group: root
    mode: 0600
  become: yes
  when: not environment_exists