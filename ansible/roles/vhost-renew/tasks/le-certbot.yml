---
# xxx
- name: Turn off SSL temporarily
  set_fact:
    ssl_method: none
    lets_encrypt_cert_exists: false

- name: Copy temporary vhost template to host
  template: src=vhost.j2 dest="{{ docker_volumes['docker_sites_enabled'] }}/{{ vhost_prefix }}/{{ primary_subdomain }}.conf"
#    validate: "docker exec -it {{ switchboard }} nginx -t"
  notify: reload nginx
  register: vhost_was_installed
  tags:
    - always
    - vhost

# The problem with this is that the client will pick the first in the list for the cert storage, but we can't reliably determine which one that will be
# Essentially, we'll get the certs, but we won't be able to find them again later because we won't know where they're stored and we can't reliably guess
# to override this behaviour, supply "letsencrypt_all_domains"
- name: Set domains to request certs for (all available domains)
  set_fact:
    letsencrypt_domain_list: "{{ domain_list | join(' -d ') }}"
  when: letsencrypt_all_domains is defined

- name: Set domains to request certs for (usually primary_domain only)
  set_fact:
    letsencrypt_domain_list: "{{ primary_domain }}"
  when: letsencrypt_all_domains is not defined

- name: run the letsencrypt certbot
  command: "letsencrypt certonly --webroot --webroot-path /var/www/letsencrypt-challenge/ --email admin@lists.noflag.org.uk --agree-tos -d {{ letsencrypt_domain_list }}"
  args:
    creates: "/etc/letsencrypt/live/{{ primary_domain }}/fullchain.pem"
  when:
    - letsencrypt_all_domains is defined

- name: Turn on SSL again
  set_fact:
    ssl_method: always
    lets_encrypt_cert_exists: true