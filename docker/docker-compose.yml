version: '2'

# Runs the main LEMP container assembly minus php.
# Nginx used as a "switchboard" vhost controller
# Pre-builds wordpress-php for all sites globally to speed up runtime
# Last part is optional for this process.
# If using a separate mysql server, mysql part is not recomended
# @author danielle

#

services:
  # drupal group fpm container
  image: drupal:7-fpm-alpine
  volumes:
     - /var/run/docker-apps:/var/run

  # wordpress group fpm container
  wordpress:
    build: apps/wordpress
    image: wordpress-php7.1-fpm-alpine-mod
    container_name: group-wordpress.fpm
    volumes:
      - group_php_pools:/usr/local/etc/php-fpm.d:ro
      - /var/www:/var/www
      - /var/run/docker-apps:/var/run
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    logging:
      options:
        max-size: 25k
    networks:
      - sqlnet
    links:
      - database:sqldb.common.scot
    environment:
      WEBROOT: "/usr/src/wordpress"
      WP_DEBUG: "off"
    restart: never

  drupal:
    build: apps/drupal
    image: drupal-php7.1-fpm-alpine-mod
    container_name: group-drupal.fpm
    volumes:
      - group_php_pools:/usr/local/etc/php-fpm.d:ro
      - /var/www:/var/www
      - /var/run/docker-apps:/var/run
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    logging:
      options:
        max-size: 25k
    networks:
      - sqlnet
    links:
      - database:sqldb.common.scot
    environment:
      WEBROOT: "/usr/src/drupal"
    restart: never

  # switchboard manages vhosts
  switchboard:
    # optionally build the image instead of pulling nginx from repo:
    build: switchboard
    image: nginx:1.11.9-alpine-mod
    #image: nginx:1.11.9-alpine
    restart: always # unless-stopped?
    container_name: switchboard
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker-apps:/var/run/docker-apps
      - nginx_config:/etc/nginx/conf.d:ro
      - nginx_config_inc:/etc/nginx/inc:ro
      - vhost_config:/etc/nginx/vhost.d:ro
      - htpasswd:/etc/nginx/htpasswd:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./switchboard/nginx.conf:/etc/nginx/nginx.conf:ro
      - sites_enabled:/etc/nginx/sites-enabled:ro
      - ssl_certs:/etc/nginx/certs:ro
      - /var/www:/var/www:ro
      - /var/lib/wordpress:/usr/src/wordpress:ro
    logging:
      options:
        max-size: 25k
  # dockergen listens to the docker socket and automatically generates vhosts when containers are started
  # It is not used for the on-demand containerized vhosts like php/fpm apps
  # see https://index.docker.io/u/jwilder/nginx-proxy/
  dockergen:
    # optionally, build the image first and don't use the version on docker-hub:
    #build: dockergen
    #image: dockergen
    # or use the pre-built version on dockerhub
    image: jwilder/docker-gen
    container_name: dockergen
    volumes:
      - nginx_config:/etc/nginx/conf.d
      - nginx_config_inc:/etc/nginx/inc:ro
      - ssl_certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # IMPORTANT: Do NOT use without customized template. Will enable STS and bad things will happen:
      - ./dockergen/templates:/etc/docker-gen/templates:ro
    command: -notify-sighup switchboard -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf #-only-exposed?
    logging:
      options:
        max-size: 25k
    restart: always
  database:
    #env_file: env
    image: yobasystems/alpine-mariadb # (tested)
    #image: alpin3/mariadb (tested)
    # untested: image: aquaron/mariadb
    # untested: https://github.com/wallneradam/docker-mariadb-alpine
    # untested: https://github.com/nimmis/docker-alpine-mariadb
    restart: always
    container_name: sqldb.common.scot
    volumes:
      - sqldata:/var/lib/mysql
      #- ./sqldb/my.cnf:/etc/mysql/my.cnf:ro
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    networks:
      - sqlnet
    logging:
      options:
        max-size: 25k

volumes:
  # This is where the MariaDB database files are kept
  sqldata:
    driver: local
  # This maps to /etc/nginx/conf.d in containers which read/write to that location (currently dockergen and switchboard)
  # It's included into the nginx server config by nginx's main config file /etc/nginx.conf
  # the container vhosts in nginx_config/default.conf are automatically regenerated by dockergen when containers arrive and leave
  nginx_config:
    driver: local
  # Dockergen automatically includes files in this location into the inside of each docker container's vhost's server { } block
  # Ansible does too, when its creating wordpress sites
  vhost_config:
    driver: local
  # Files in this location are available for per-vhost or server-wide include manually.
  # Nothing here is automatically included into the server config. Maps to switchboard:/etc/nginx/inc
  nginx_config_inc:
    driver: local
  # Designed for htpasswd info. Maps to switchboard:/etc/nginx/htpasswd
  htpasswd:
    driver: local
  # This directory contains vhost config files for each container, except the ones which dockergen auto-generates.
  # Most files here are generated by ansible. They can be edited manually if needed and the directory contents is included automatically
  sites_enabled:
    driver: local
  # Most SSL certificates live here, except for letsencrypt certs.
  # Includes the master server's default SSL cert and any supplied by clients.
  # If the cert exists, it will be automatically included by both dockergen and ansible.
  ssl_certs:
    driver: local
  # This location contains the group pools for the always-active php-fpm instance (it is not used by the on-demand instances)
  group_php_pools:
    driver: local

networks:
  sqlnet: