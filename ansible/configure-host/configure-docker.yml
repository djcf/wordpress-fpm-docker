---
- hosts: all
  vars_files:
    - ../resources/vars_docker_conf.yml
    - ../add-vhosts/resources/vars_db.yml
  tasks:
    - name: remove pre-built app containers (wp)
      docker:
        name: docker_wordpress_1
        image: wordpress
        state: absent
      become: true

    - name: remove pre-built app containers (fpm)
      docker:
        name: docker_fpm_1
        image: fpm
        state: absent
      become: true

    - include: ../inc/tasks-register-docker-data.yml

    - name: copy generic .conf files to docker volumes
      copy:
        src: "resources/{{ item }}"
        dest: "{{ docker_volumes['docker_nginx_config_inc'] }}"
      with_items:
        - general.conf
        - wordpress.conf
        - ssl.conf
      become: true
      notify: reload nginx

    - name: copy default vhost file to docker volumes
      copy:
        src: "resources/{{ item }}"
        dest: "{{ docker_volumes['docker_nginx_config'] }}"
      with_items:
        - default.conf
      become: true
      notify: reload nginx

    - name: A default SSL certificate-pair should exist for all vhosts when using SSL but not letsencrypt and no user certificates were provided
      command: "openssl req -new -nodes -x509 -subj /C=GB/ST=London/L=London/O=IT/CN=noflag.org.uk -days 365 -keyout {{ docker_volumes['docker_ssl_certs'] }}/{{ default_cert }}.key -out {{ docker_volumes['docker_ssl_certs'] }}/{{ default_cert }}.crt -extensions v3_ca creates={{ docker_volumes['docker_ssl_certs'] }}/{{ default_cert }}.crt"
      become: yes
      notify: reload nginx

    - include: ../add-vhosts/inc/alpine-tasks-find-mysql-root-password-from-docker.yml

    - name: Allow root user to access from any host
      command: docker exec sqldb.noflag.org.uk mysql -u root -e "DROP USER 'root'@'%'; CREATE USER 'root'@'%' IDENTIFIED BY '{{ mysql_root_password }}'; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"
      become: true

  handlers:
    - name: reload nginx
      command: "docker exec {{ switchboard }} nginx -s reload"
      become: yes