# ---
# IMPORTANT! THIS FILE IS NOT USED
# Instead, the letsencrypt certbot client is used -- see le-certbot.yml
# ##
# # From https://github.com/ansible/ansible/issues/20638
# # https://docs.ansible.com/ansible/letsencrypt_module.html

# - name: Create certificate key
#   command: "openssl genrsa -out {{ docker_volumes['docker_ssl_certs'] }}/{{ primary_subdomain }}.key 4096"
#   args:
#     creates: "{{ docker_volumes['docker_ssl_certs'] }}/{{ primary_subdomain }}.key"
#   register: result
#   notify: reload nginx

# - name: Generate CSR
#   command: "openssl req -new -sha256 -key {{ docker_volumes['docker_ssl_certs'] }}/{{ primary_subdomain }}.key -out /tmp/{{ primary_subdomain }}.csr -subj /CN={{ primary_domain }}"
#   args:
#     creates: "/tmp/{{ primary_subdomain }}.csr"
# #  when: result | changed

# - name: Prevent SSL from being used before the lets_encrypt certificate has been generated or signed
#   set_fact:
#     ssl_host: false
#     use_own_certificate: true

# - name: Copy vhost template to host (first pass)
#   template: src=vhost.j2 dest="{{ docker_volumes['docker_sites_enabled'] }}/{{ vhost_prefix }}/{{ primary_subdomain }}"

# - name: Reload nginx with new vhost
#   command: docker exec switchboard nginx -s reload

# - name: Re-enable SSL
#   set_fact:
#     ssl_host: true

# - name: ACME step 1
#   letsencrypt:
#     account_email: "{{ admin_email }}"
#     account_key: "{{ letsencrypt_account_key }}"
#     csr: "/tmp/{{ primary_subdomain }}.csr"
#     dest: "{{ docker_volumes['docker_ssl_certs'] }}/{{ primary_domain }}.crt"
#   register: le_challenge

# # perform the necessary steps to fulfill the challenge
# # for example:
# #
# - copy:
#     dest: "/var/www/letsencrypt-challenge/.well-known/{{ le_challenge['challenge_data'][primary_domain]['http-01']['resource'] }}"
#     content: "{{ le_challenge['challenge_data'][primary_domain]['http-01']['resource_value'] }}"
#     when: le_challenge|changed

# - letsencrypt:
#     account_email: "{{ admin_email }}"
#     account_key: "{{ letsencrypt_account_key }}"
#     csr: "/tmp/{{ primary_subdomain }}.csr"
#     dest: "{{ docker_volumes['docker_ssl_certs'] }}/{{ primary_domain }}.crt"
#     data: "{{ le_challenge }}"
#   when: le_challenge|changed