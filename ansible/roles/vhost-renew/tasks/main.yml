---
- name: Try to find a custom vhost file for inclusion
  stat: "path={{ docker_volumes['docker_vhost_config'] }}/{{ primary_subdomain }}.conf"
  register: custom_vhost_exists
  failed_when: not custom_vhost_exists.stat.exists
  ignore_errors: true
  changed_when: false
  tags:
    - vhost
    - all

- name: Generate unique diffie-helman seed
  command: "openssl dhparam -out {{ docker_volumes['docker_ssl_certs'] }}/{{ primary_subdomain }}.dhparam.pem 2048 creates={{ docker_volumes['docker_ssl_certs'] }}/{{ primary_subdomain }}.dhparam.pem"
  when: 
    - ssl_host
  tags:
    - ssl
  notify: reload nginx
  
- name: Try to find a certificate for the host if lets_encrypt is in use
  stat: "path={{ docker_volumes['docker_ssl_certs'] }}/{{ primary_domain }}.crt"
  register: ssl_cert_exists
  ignore_errors: true
  changed_when: false
  failed_when: not ssl_cert_exists.stat.exists
  tags:
    - lets_encrypt
    - ssl

- include: configure-local-ssl-files.yml
  when:
    - ssl_host
    - not lets_encrypt
  tags:
    - ssl

- include: le-certbot.yml
  when:
    - lets_encrypt
    - ssl_host
  tags:
    - lets_encrypt
    - ssl

- name: Copy vhost template to host
  template:
    src: vhost.j2
    dest: "{{ docker_volumes['docker_sites_enabled'] }}/{{ vhost_prefix }}/{{ primary_subdomain }}.conf"
#    validate: "docker exec -it {{ switchboard }} nginx -t"
  notify: reload nginx
  register: vhost_was_installed
  tags:
    - always
    - vhost
  
- debug:
    msg: >
      A vhost for {{ primary_subdomain }} 
      ({{ ssl_host|ternary('http','https') }}://{{ primary_domain }}) 
      {{ vhost_was_installed.changed|ternary('has been installed','exists') }} at 
      {{ docker_volumes['docker_sites_enabled'] }}/{{ vhost_prefix }}/{{ primary_subdomain }}.conf
  tags:
    - vhost