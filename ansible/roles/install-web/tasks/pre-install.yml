---
- name: ensure that various directories exist
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  with_items:
    - /etc/ansible/roles
    - /usr/local/cron
#    - "{{ letsencrypt_account_dir }}"

- name: configure systemd to activate docker containers
  copy: src={{ item }} dest=/etc/systemd/system/ owner=root group=root mode=655
  with_fileglob:
  - files/systemd.services/*
  notify: reload systemd

- name: copy admin scripts to /usr/local/bin
  copy: src={{ item }} dest=/usr/local/bin owner=root group=root mode=655
  with_fileglob:
  - files/bin/*
  tags:
    - bins

- name: increase system performance by adjusting sysctl
  copy: src=sysctl.conf dest=/etc/sysctl.d/99-sysctl.conf owner=root group=root mode=655
  notify: reload sysctl
  tags:
    - tweaks

- name: install this toolkit to a clear path on the remote host
  git:
    repo: "{{ remote_path}}"
    dest: "{{ install_path }}"
  ignore_errors: true
  #when: not is_vagrant

- name: Install ctop
  get_url:
    url: https://github.com/bcicen/ctop/releases/download/v0.4.1/ctop-0.4.1-linux-amd64
    dest: /usr/local/bin/ctop
    remote_src: true
    mode: 0744

- name: copy letsencrypts challenge-response directory
  synchronize:
    src: "{{ role_path }}/files/letsencrypt-challenge"
    dest: /var/www/

# - name: Create letsencrypt account key
#   command: "openssl genrsa -out {{ letsencrypt_account_key }} 4096"
#   args:
#     creates: "{{ letsencrypt_account_key }}"

# - name: Ensure letsencrypt key is root-only
#   file:
#     path: "{{ letsencrypt_account_key }}"
#     owner: root
#     group: root
#     mode: 0640

#- name: symlink ansible roles into the main ansible directory
#  file: "src={{ install_path }}/ansible/roles/{{ item }} dest=/etc/ansible/roles/{{ item }} state=link"
#  with_items:
#    - common
#    - system
#    - configure

- name: install a 'ghost' wordpress directory for nginx to test file existence against during requests
  unarchive:
    src: https://wordpress.org/latest.zip
    dest: /var/lib
    remote_src: true
    creates: /var/lib/wordpress
  tags:
    - wordpress

- name: Template out the best-matching MySQL configuration file
  template: "src=sqlconf/my-{{ rigsize }}.cnf.j2 dest={{ install_path }}/docker/sqldb/my.cnf"
  tags:
    - tweaks
    - database

- name: template out a new nginx.conf file with the appropriate number of workers for this host
  template: "src=nginx.conf.j2 dest={{ install_path }}/docker/switchboard/nginx.conf"
  tags:
    - tweaks
    - nginx

#    - name: Install pip
#      apt:
#        pkg: "{{ item }}"
#        state: installed
#      with_items:
#        - python-dev
#        - python-pip

#    - name: Install Docker-py
#      pip:
#        name: docker-py
#        version: 1.1.0

#    - name:
#    - name: Host should have docker.py
#      become: true
#      pip: state=present name="{{ item }}"
#      with_items:
#        - docker-py==1.2.3
#        - six==1.10.0

- name: Install important utilities
  apt:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - imagemagick