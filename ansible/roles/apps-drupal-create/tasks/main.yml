---
# tasks file for apps-drupal-create
# - name: Project volumes should exist
#   docker_volume:
#     name: "{{ item }}"
#   with_items:
#     - "{{ primary_subdomain }}_sites"
#     - "{{ primary_subdomain }}_public_scripts"
#     - "{{ primary_subdomain }}_private"

- name: Create Drupal container for new site
  docker_container:
    name: "{{ primary_subdomain }}.fpm"
    image: "{{ docker_image }}"
    state: "{{ state }}"
    hostname: "{{ primary_domain }}"
    networks:
      - name: docker_sqlnet
        links:
        - "{{ sqldb }}:{{ mysql_host }}"
    volumes: "{{ volumes }}"
    detach: yes
    log_options:
      max_size: 500k
    env_file: "{{ env_path }}"
  tags:
    - docker

# - name: Check to see if Drupal database exists
#   command: >
#     docker run 
#       --env-file {{ env_path }} 
#       --net=docker_sqlnet 
#       --link {{ sqldb }}:{{ mysql_host }}
#       --volumes-from {{ parent_container }}
#       --rm
#       {{ docker_image }} 
#       sh -c 
#         '/usr/local/bin/wp db check --allow-root --path={{ phproot }}'
#   ignore_errors: yes
#   failed_when: db_exists.rc != 0
#   register: db_exists
#   changed_when: false
#   tags:
#     - database

- name: Install Drupal database
  docker_container:
    command: >
      drush site-install
    name: "{{ primary_subdomain }}-installer"
    image: "{{ docker_image }}"
    networks:
      - name: docker_sqlnet
        links:
          - "{{ sqldb }}:{{ mysql_host }}"
    volumes_from:
      - "{{ parent_container }}"
    env_file: "{{ env_path }}"
    cleanup: yes
    detach: no
    hostname: "fpm.{{primary_subdomain}}.{{ primary_domain }}"